/**
 * Copyright (C) Key Bridge Global LLC and/or its affiliates.
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 * <p/>
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */
package org.whitespace_db_providers._2011.interdb.ws;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.*;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.6-2b01 Generated
 * source version: 2.2
 * <p/>
 * @author Jesse Caulfield
 */
@WebServiceClient(name = "WSpaces_WS_SVC", targetNamespace = "http://www.whitespace-db-providers.org/2011//InterDB/ws", wsdlLocation = "META-INF/wsdl/WSDL_V1-2_Checkpoint_11-21-12.wsdl")
public class WSpacesWSSVC extends Service {

  private final static URL WSPACESWSSVC_WSDL_LOCATION;
  private final static WebServiceException WSPACESWSSVC_EXCEPTION;
  private final static QName WSPACESWSSVC_QNAME = new QName("http://www.whitespace-db-providers.org/2011//InterDB/ws", "WSpaces_WS_SVC");

  static {
    URL url = null;
    WebServiceException webServiceException = null;
    try {
      url = WSpacesWSSVC.class.getClassLoader().getResource("META-INF/wsdl/WSDL_V1-2_Checkpoint_11-21-12.wsdl");
    } catch (Exception exception) {
      webServiceException = new WebServiceException(exception);
    }
    WSPACESWSSVC_WSDL_LOCATION = url;
    WSPACESWSSVC_EXCEPTION = webServiceException;
  }

  public WSpacesWSSVC() {
    super(__getWsdlLocation(), WSPACESWSSVC_QNAME);
  }

  public WSpacesWSSVC(WebServiceFeature... features) {
    super(__getWsdlLocation(), WSPACESWSSVC_QNAME, features);
  }

  public WSpacesWSSVC(URL wsdlLocation) {
    super(wsdlLocation, WSPACESWSSVC_QNAME);
  }

  public WSpacesWSSVC(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, WSPACESWSSVC_QNAME, features);
  }

  public WSpacesWSSVC(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public WSpacesWSSVC(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   * Get an instance of the WSpacesWSPT PORT implementation.
   * <p/>
   * @return returns WSpacesWSPT
   */
  @WebEndpoint(name = "WSpaces_WS_Service")
  public WSpacesWSPT getWSpacesWSService() {
    return super.getPort(new QName("http://www.whitespace-db-providers.org/2011//InterDB/ws", "WSpaces_WS_Service"), WSpacesWSPT.class);
  }

  /**
   * Get an instance of the WSpacesWSPT PORT implementation.
   * <p/>
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
   *                 configure on the proxy. Supported features not in the
   *                 'features' parameter will have their default values.
   * @return returns WSpacesWSPT
   */
  @WebEndpoint(name = "WSpaces_WS_Service")
  public WSpacesWSPT getWSpacesWSService(WebServiceFeature... features) {
    return super.getPort(new QName("http://www.whitespace-db-providers.org/2011//InterDB/ws", "WSpaces_WS_Service"), WSpacesWSPT.class, features);
  }

  private static URL __getWsdlLocation() {
    if (WSPACESWSSVC_EXCEPTION != null) {
      throw WSPACESWSSVC_EXCEPTION;
    }
    return WSPACESWSSVC_WSDL_LOCATION;
  }
}
